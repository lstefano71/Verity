name: Create Release

on:
  push:
    branches:
      - main
      - 'feature/**'

jobs:
  # --- JOB 1: Build the application on Windows ---
  build:
    name: Build on Windows
    runs-on: windows-latest
    # Define outputs that the next job can use
    outputs:
      artifact_name: ${{ steps.get_artifact.outputs.ARTIFACT_NAME }}
      tag_name: ${{ steps.get_version.outputs.TAG_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install Nerdbank.GitVersioning tool
        run: dotnet tool install -g nbgv

      - name: Restore dependencies
        run: dotnet tool restore

      - name: Run Cake build and package
        run: dotnet cake --target=Package --configuration=Release

      - name: Get Release Version
        id: get_version
        run: echo "TAG_NAME=v$(nbgv get-version -v NuGetPackageVersion)" >> $env:GITHUB_OUTPUT
        shell: pwsh
      
      # Use a more robust way to find the artifact and its name
      - name: Get Artifact Details
        id: get_artifact
        shell: pwsh
        run: |
          $artifact = Get-ChildItem ./artifacts/*.zip | Select-Object -First 1
          echo "ARTIFACT_NAME=$($artifact.Name)" >> $env:GITHUB_OUTPUT

      # Upload the packaged .zip file so the release job can download it
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: verity-package
          path: ./artifacts/${{ steps.get_artifact.outputs.ARTIFACT_NAME }}


  # --- JOB 2: Create the Release on Linux ---
  release:
    name: Create Release on Linux
    # This job will only run after the 'build' job has succeeded
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create releases
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Download the .zip file that the 'build' job uploaded
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: verity-package
          
      - name: Generate Changelog
        id: changelog
        uses: orhun/git-cliff-action@v3
        with:
          config: cliff.toml
          # Use the tag from the build job to generate changelog from correct range
          args: --tag ${{ needs.build.outputs.tag_name }} --strip header
          
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.tag_name }}
          name: Release ${{ needs.build.outputs.tag_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          # Attach the downloaded .zip file to the release
          files: ${{ needs.build.outputs.artifact_name }}
          prerelease: ${{ startsWith(github.ref, 'refs/heads/feature/') }}
