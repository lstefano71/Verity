# A configuration file for git-cliff.
# See: https://github.com/orhun/git-cliff#configuration-file

[changelog]
# A decorated header for the changelog.
header = """
""" # We will generate the header in the workflow itself.
# The template for the changelog body.
body = """
{% for group, commits in commits | group_by(attribute="group") | sort(attribute="group") %}
    ### {{ group }}
    {% for commit in commits %}
        - {{ commit.message | upper_first }} ([`{{ commit.id | truncate(length=7, end="") }}`](https://github.com/{{ remote.owner }}/{{ remote.repo }}/commit/{{ commit.id }}))
    {% endfor %}
{% endfor %}
"""
# Remove trailing newlines from the changelog.
trim = true

[git]
# A list of commit types to be used for grouping.
commit_parsers = [
  { message = "^feat", group = "🚀 Features" },
  { message = "^fix", group = "🐛 Bug Fixes" },
  { message = "^perf", group = "⚡ Performance" },
  { message = "^chore", group = "🧹 Maintenance" },
  { message = "^docs", group = "📚 Documentation" },
  # This is the catch-all. It MUST be last.
  { message = "^.*", group = "Miscellaneous Changes" },
]

# --- THIS IS THE NEW SECTION THAT FIXES THE TRUNCATION ---
# Overrides the default preprocessors to prevent truncation of the commit message.
commit_preprocessors = [
  # This regex captures the entire first line of the commit message.
  { pattern = '^(.*)', message = "$1" },
]

# Ignore commits from the changelog.
ignore_tags = ""
# Process commits from the latest tag to the current HEAD.
latest_tag = "v_._._"
